//=====================================================================================================================
// Проект: LotusPlatform
// Раздел: Модуль базового ядра
// Подраздел: Подсистема игровых объектов
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusGameObjectCommon.cs
*		Общие типы и структуры данных игровых объектов.
*		Определения общих параметров классификации игровых объектов.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 04.04.2021
//=====================================================================================================================
using System;
using UnityEngine;
//=====================================================================================================================
namespace Lotus
{
	namespace Core
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup CoreUnityGameObject Подсистема игровых объектов
		//! Подсистема игровых объектов содержит функциональность для работы с игровыми объектами. Подсистема игровых
		//! объектов определяет общие параметры классификации игровых объектов, а также обеспечивает унифицированный поиск
		//! и предоставление всех доступных игровых объектов, включая неактивные объекты которые находятся на сцене.
		//! \ingroup Core
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Категория игрового объекта
		/// </summary>
		/// <remarks>
		/// Категория игрового объекта показывает общую принадлежность игрового объекта к различным сущностям
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum TGameObjectCategory
		{
			/// <summary>
			/// Игровой объект представляет собой обособленную сущность на карте.
			/// Такой объект как правило виден на карте
			/// </summary>
			Map,

			/// <summary>
			/// Игровой объект представляет собой логическую сущность и его не требуется отображать на карте
			/// </summary>
			Logic,

			/// <summary>
			/// Игровой объект представляет собой системный объект.
			/// Такие объекты, как правило, относятся к движку и существуют на протяжении всего времени работы приложения
			/// </summary>
			System,

			/// <summary>
			/// Неизвестное значение
			/// </summary>
			Unknown
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Модель отображения игрового объекта
		/// </summary>
		/// <remarks>
		/// Модель отображения игрового объекта показывает каким образом игровой объект фигурирует на карте
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum TGameObjectModel
		{
			/// <summary>
			/// Некий обособленный предмет на карте в разумных масштабах
			/// Особенности:
			/// - Может отбрасывать и/или принимать тень.
			/// - Может быть полностью отбракован/выключен для повышения производительности.
			/// - Может иметь коллайдер и физическую сущность.
			/// - Выполняет как правило определенную роль
			/// </summary>
			Subject,

			/// <summary>
			/// Пустышка, игровой объект который как выполняет второстепенную роль.
			/// Например: контейнер для группировки, динамические декали и тому подобное
			/// </summary>
			Dummy,

			/// <summary>
			/// Глобальный объект, такой объект как правило занимает большое пространство(скайбокс, ландшафт, река)
			/// Глобальный объект также не может быть целиком отбракован или выключен
			/// </summary>
			Global,

			/// <summary>
			/// Неизвестное значение
			/// </summary>
			Unknown
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Семейство игрового объекта
		/// </summary>
		/// <remarks>
		/// Семейство игрового объекта отображает различные стороны логической сущности объекта
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum TGameObjectFamily
		{
			/// <summary>
			/// Простой игровой объект
			/// </summary>
			Simple,

			/// <summary>
			/// Игровой представляет собой единичный экземпляр.
			/// Такие объекты создаются при первом обращении к ним
			/// </summary>
			Instance,

			/// <summary>
			/// С представлением на карте. Такими объектами как правило бывают игровые зоны и триггеры
			/// </summary>
			SceneObject,

			/// <summary>
			/// Неизвестное значение
			/// </summary>
			Unknown
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Префаб игрового объекта
		/// </summary>
		/// <remarks>
		/// Префаб игрового объекта показывает взаимосвязь между префабом объекта (шаблоном) и игровым объектом расположенным на сцене (экземпляром)
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public enum TGameObjectPrefab
		{
			/// <summary>
			/// Игровой объект не связан с префабом и не является его экземпляром
			/// </summary>
			None,

			/// <summary>
			/// Игровой объект является экземпляром префаба
			/// </summary>
			Prefab,

			/// <summary>
			/// Игровой объект является частью экземпляром префаба
			/// </summary>
			PrefabPart,

			/// <summary>
			/// Игровой объект является экземпляром префаба трехмерной модели
			/// </summary>
			Model,

			/// <summary>
			/// Неизвестное значение
			/// </summary>
			Unknown
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Структура данных для хранения иерархической связи
		/// </summary>
		/// <remarks>
		/// Применяется для формирование из линейного списка системы иерархических отношений
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public struct TGameObjectHierarchy
		{
			/// <summary>
			/// Идентификатор игрового объекта (именно игрового объекта, а не компонента)
			/// </summary>
			public Int32 ID;

			/// <summary>
			/// Родительский идентификатор игрового объекта (именно игрового объекта, а не компонента)
			/// </summary>
			public Int32 ParentID;

			/// <summary>
			/// Трансформация игрового объекта
			/// </summary>
			public Transform Object;
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================