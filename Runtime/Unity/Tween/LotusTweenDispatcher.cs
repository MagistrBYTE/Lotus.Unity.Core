//=====================================================================================================================
// Проект: LotusPlatform
// Раздел: Модуль базового ядра
// Подраздел: Подсистема анимации
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusTweenDispatcher.cs
*		Центральный диспетчер для хранения и управления ресурсами анимации.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.IO;
using System.Collections.Generic;
using UnityEngine;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
	namespace Core
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CoreUnityTween
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Центральный диспетчер для хранения и управления ресурсами анимации
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		[Serializable]
		public class LotusTweenDispatcher : LotusSystemSingleton<LotusTweenDispatcher>, ISerializationCallbackReceiver,
			ILotusSingleton, ILotusMessageHandler
		{
			#region ======================================= СТАТИЧЕСКИЕ СВОЙСТВА ======================================
			/// <summary>
			/// Хранилище анимационных кривых
			/// </summary>
			public static LotusTweenCurveStorage CurveStorage
			{
				get
				{
					return (Instance.mCurveStorage);
				}
			}

			/// <summary>
			/// Хранилище анимационных спрайтов
			/// </summary>
			public static LotusTweenSpriteStorage SpriteStorage
			{
				get
				{
					return (Instance.mSpriteStorage);
				}
			}
			#endregion

			#region ======================================= ДАННЫЕ ====================================================
			// Системные параметры
			[SerializeField]
			internal Boolean mIsMainInstance;
			[SerializeField]
			internal TSingletonDestroyMode mDestroyMode;
			[SerializeField]
			internal Boolean mIsDontDestroy;
			[SerializeField]
			internal String mGroupMessage = "Tween";

			// Основные параметры
			[SerializeField]
			internal LotusTweenCurveStorage mCurveStorage;
			[SerializeField]
			internal LotusTweenSpriteStorage mSpriteStorage;
			#endregion

			#region ======================================= СВОЙСТВА ILotusSingleton ==================================
			//
			// ОСНОВНЫЕ ПАРАМЕТРЫ
			//
			/// <summary>
			/// Статус основного экземпляра
			/// </summary>
			public Boolean IsMainInstance
			{
				get
				{
					return mIsMainInstance;
				}
				set
				{
					mIsMainInstance = value;
				}
			}

			/// <summary>
			/// Статус удаления игрового объекта
			/// </summary>
			/// <remarks>
			/// При дублировании будет удалятся либо непосредственного игровой объект либо только компонент
			/// </remarks>
			public TSingletonDestroyMode DestroyMode
			{
				get
				{
					return mDestroyMode;
				}
				set
				{
					mDestroyMode = value;
				}
			}

			/// <summary>
			/// Не удалять объект когда загружается новая сцена
			/// </summary>
			public Boolean IsDontDestroy
			{
				get
				{
					return mIsDontDestroy;
				}
				set
				{
					mIsDontDestroy = value;
				}
			}
			#endregion

			#region ======================================= СВОЙСТВА ILotusMessageHandler =============================
			/// <summary>
			/// Группа которой принадлежит данный обработчик событий
			/// </summary>
			public String MessageHandlerGroup
			{
				get
				{
					return (mGroupMessage);
				}
			}
			#endregion

			#region ======================================= СОБЫТИЯ UNITY =============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Включение хранилища
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public void OnEnable()
			{
			}
			#endregion

			#region ======================================= МЕТОДЫ ISerializationCallbackReceiver =====================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Процесс перед сериализацией объекта
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public void OnBeforeSerialize()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Процесс после сериализацией объекта
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public void OnAfterDeserialize()
			{

			}
			#endregion

			#region ======================================= МЕТОДЫ ILotusMessageHandler ===============================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Основной метод для обработки сообщения
			/// </summary>
			/// <param name="args">Аргументы сообщения</param>
			/// <returns>Статус успешности обработки сообщений</returns>
			//---------------------------------------------------------------------------------------------------------
			public Int32 OnMessageHandler(CMessageArgs args)
			{
				return (XMessageHandlerResultCode.NEGATIVE_RESULT);
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================